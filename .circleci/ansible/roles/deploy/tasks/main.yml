- name: install rsync on the ansible controller
  connection: local
  package:
    name: rsync
    state: present


- name: install rsync on the ansible remote
  become: yes
  package:
    name: rsync
    state: latest

- name: install deps
  become: yes
  apt:
    name: ['nodejs', 'npm']
    state: latest
    update_cache: yes
    
- name: install pm2
  become: yes
  npm:
    name: pm2
    global: yes
    state: latest
    production: yes

- name: create f dir
  become: yes
  shell: 
    mkdir -p /home/ubuntu/uda_app

- name: "copy files"
  become: yes
  copy:
    src: "../../backend/dist/"
    dest: /home/ubuntu/uda_app
    mode: "0755"
    backup: yes

- name: "copy files"
  become: yes
  copy:
    src: artifact.tar.gz
    dest: /home/ubuntu/uda_app
    mode: "0755"
    backup: yes

- name: "extract files"
  become: yes
  shell: |
    cd /home/ubuntu/uda_app
    tar -xvf artifact.tar.gz .
    rm artifact.tar.gz
    npm install

# - name: "run install"
#   become: yes
#   shell:
#     "npm install"

# - name: "copy node_modules files"
#   become: yes
#   copy:
#     src: "../../backend/node_modules/"
#     dest: /home/ubuntu/uda_app/node_modules
#     mode: "0755"
#     backup: yes
  # register: command_output

# - debug: 
#     var: command_output.stdout_lines

- name: "delete anything that might already be running"
  become: true
  command: pm2 delete all
  ignore_errors: true


- name: "start server"
  become: true
  command: pm2 start -f main.js
  args:
    chdir: /home/ubuntu/uda_app
  environment:
    ENVIRONMENT: production
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "./migrations"
    TYPEORM_MIGRATIONS: "./migrations/*.js"
    TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"