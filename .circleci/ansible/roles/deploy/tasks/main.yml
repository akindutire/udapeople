- name: install rsync on the ansible controller
  connection: local
  package:
    name: rsync
    state: present


- name: install rsync on the ansible remote
  become: yes
  package:
    name: rsync
    state: latest

- name: "copy files"
  become: yes
  synchronize:
    src: "../../backend/dist/"
    dest: ~/dist
    recursive: true
  register: command_output

- debug: 
    var: command_output.stdout_lines

 - name: "delete anything that might already be running"
    become: true
    command: pm2 delete all
    ignore_errors: true

- name: "run app"
  become: yes
  shell: |
    "pm2 stop default"
    "pm2 start main.js -f"
  args:
    chdir: ~/dist/
  environment:
    ENVIRONMENT: production
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "./migrations"
    TYPEORM_MIGRATIONS: "./migrations/*.js"
    TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"